


block generateDocWebsite()
	copyAssetFolder()
	docDateLen = lengthOf(allAkoDocData)
	for a = 1 to docDateLen {
		createHtml(allAkoDocData[a])
	} 
	
block createHtml(akoDocData)
	_file = new File("./templates/"+templateName+"/sourcetemplate.html")
	content = _file.readFileAsString()
	
	__linkToFile = "" 
	__mainContent = "<p>"+formatHTMLComment(akoDocData[:prefix],getRelativeLink(akoDocData[:htmlpath]))+"</p><br />"
	splited = splitString(akoDocData[:htmlpath],'/')
	splitedLen = lengthOf(splited)
	for a = 0 to splitedLen - 1 {
		_____ = ((splitedLen - 1) - a)
		if _____ >= 2 {
			__linkToFile += '<a href="'+__copy("../", _____ - 1)+'"><button class="mat-menu-item" tabindex="0" aria-disabled="false"> '+splited[a]+' </button></a>'
		else
			__linkToFile += '<a href="'+__copy(".", _____)+'"><button class="mat-menu-item" tabindex="0" aria-disabled="false"> '+splited[a]+' </button></a>'
		}
	}
	__linkToFile += '<a href="#"><button class="mat-menu-item active" tabindex="0" aria-disabled="false"> '+akoDocData[:title]+' </button></a>  '
	
	__sideBarNavigations = '<div _ngcontent-bxo-47=""> <a href="#"><span _ngcontent-bxo-47="" class="selected-content menu-title pointer"> '+akoDocData[:title]+' </span></a> </div>'
	
	#Blocks
	blocks = akoDocData[:blocks] #fix index after fix in simple-lang source
	outBlocksLen = lengthOf(blocks)
	for d = 0 to outBlocksLen {
		blockName = blocks[d][1]
		blockAbsoluteName = blocks[d][2]["abName"]
		blockComment = formatHTMLComment(blocks[d][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
		blockId = blocks[d][2]["id"]
		__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
				<span _ngcontent-bxo-47="" class="pointer">  
				<a href="#'+blockId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+blockName+'()
				</span></a> </span> </div>' + nl
				
		__mainContent += '<div id="'+blockId+'" class="ako-block">
			<div class="block-quote block-quote-info bg-green-alpha blockquote-padding-left" > 
				<span style="font-size:20px;font-weight:800px;"> block '+blockAbsoluteName+'</span> </div>
					<p>'+blockComment+'</p></div>'
	}
	
	#Classes
	classes = akoDocData[:classes] #fix index after fix in simple-lang source
	outClassesLen = lengthOf(classes)
	for d = 0 to outClassesLen {
		className = classes[d][1]
		classAbsoluteName = classes[d][2]["abName"]
		classComment = formatHTMLComment(classes[d][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
		classId = classes[d][2]["id"]
		__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
				<span _ngcontent-bxo-47="" class="pointer selected-elem">  
				<a href="#'+classId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+className+'
				</span></a> </span> </div>' + nl
		
		__mainContent += '<h1 id="'+classId+'">'+classAbsoluteName+'</h1>
				<p>'+classComment+'</p>'
			
		blocks = classes[d][2][:blocks] #fix index after fix in simple-lang source
		outBlocksLen = lengthOf(blocks)
		for e = 0 to outBlocksLen {
			blockName = blocks[e][1]
			blockAbsoluteName = blocks[e][2]["abName"]
			blockComment = formatHTMLComment(blocks[e][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
			blockId = blocks[e][2]["id"]
			__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
				<span _ngcontent-bxo-47="" class="pointer">  
				<a href="#'+blockId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+blockName+'()
				</span></a> </span> </div>' + nl
				
			__mainContent += '<div id="'+blockId+'" class="ako-block">
				<div class="block-quote block-quote-info bg-green-alpha blockquote-padding-left" > 
					<span style="font-size:20px;font-weight:800px;"> block '+blockAbsoluteName+'</span> </div>
						<p>'+blockComment+'</p></div>'
		}
	}
	
	#MODULES
	modules = akoDocData[:modules] #fix index after fix in simple-lang source
	outModulesLen = lengthOf(modules)
	for d = 0 to outModulesLen {
		moduleName = modules[d][1]
		classes = modules[d][2]["classes"]
		blocks = modules[d][2]["blocks"]
		if isString(moduleName) { 
			moduleComment = formatHTMLComment(modules[d][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
			moduleId = modules[d][2]["id"]
			__sideBarNavigations += '<div _ngcontent-bxo-47=""><span _ngcontent-bxo-47="" class="back-button-hidden"></span> </div>
			<div _ngcontent-bxo-47=""> <a href="#'+moduleId+'"><span _ngcontent-bxo-47="" class="selected-content menu-title pointer"> '+moduleName+' </span></a> </div>'
				
			__mainContent += '<h1 id="'+moduleId+'">'+moduleName+'</h1>
					<p>'+moduleComment+'</p>'
		}
		
		#MODULES BLOCKS
		outBlocksLen = lengthOf(blocks)
		if outBlocksLen >= 0 {
			for e = 0 to outBlocksLen {
				blockName = blocks[e][1]
				blockAbsoluteName = blocks[e][2]["abName"]
				blockComment = formatHTMLComment(blocks[e][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
				blockId = blocks[e][2]["id"]
				__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
					<span _ngcontent-bxo-47="" class="pointer">  
						<a href="#'+blockId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+blockName+'()
							</span></a> </span> </div>' + nl
				
				__mainContent += '<div id="'+blockId+'" class="ako-block">
					<div class="block-quote block-quote-info bg-green-alpha blockquote-padding-left" > 
						<span style="font-size:20px;font-weight:800px;"> block '+blockAbsoluteName+'</span> </div>
							<p>'+blockComment+'</p></div>'
			}
		}
		
		#MODULES CLASSES
		outClassesLen = lengthOf(classes) #fix index after fix in simple-lang source
		if outClassesLen >= 0 {
			for f = 0 to outClassesLen {
				className = classes[f][1]
				classAbsoluteName = classes[f][2]["abName"]
				classComment = formatHTMLComment(classes[f][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
				classId = classes[f][2]["id"]
				__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
					<span _ngcontent-bxo-47="" class="pointer selected-elem">  
						<a href="#'+classId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+className+'
						</span></a> </span> </div>' + nl
				
				__mainContent += '<h1 id="'+classId+'">'+classAbsoluteName+'</h1>
					<p>'+classComment+'</p>'
				
				blocks = classes[f][2][:blocks] #fix index after fix in simple-lang source
				outBlocksLen = lengthOf(blocks)
				for e = 0 to outBlocksLen {
					blockName = blocks[e][1]
					blockAbsoluteName = blocks[e][2]["abName"]
					blockComment = formatHTMLComment(blocks[e][2]["comment"],getRelativeLink(akoDocData[:htmlpath]))
					blockId = blocks[e][2]["id"]
					__sideBarNavigations += '<div _ngcontent-bxo-47="" class="mt30"> 
						<span _ngcontent-bxo-47="" class="pointer">  
							<a href="#'+blockId+'"><span _ngcontent-bxo-47="" class="selected-content"> '+blockName+'()
								</span></a> </span> </div>' + nl
								
					__mainContent += '<div id="'+blockId+'" class="ako-block">
						<div class="block-quote block-quote-info bg-green-alpha blockquote-padding-left" > 
							<span style="font-size:20px;font-weight:800px;"> block '+blockAbsoluteName+'</span> </div>
								<p>'+blockComment+'</p></div>'
				}
			}
		}
		
	}
	__mainContent += "<br /><p>"+formatHTMLComment(akoDocData[:suffix],getRelativeLink(akoDocData[:htmlpath]))+"</p><br />"
	
	secMenu = variableMap["SecondaryMenu"]
	__secondaryMenu = ""
	if isList(secMenu) {
		secMenuLen = lengthOf(secMenu)
		for i = 0 to secMenuLen {
			__menu = secMenu[i] 
			if splitedLen > 1 {
				tu = __copy(".", ((splitedLen - 1) - 0))+"/../"
			else 
				tu = __copy(".", ((splitedLen - 0) - 0))+"/"
			}
			url = replaceString(__menu[1],"doc-index",tu)
			__secondaryMenu += '<a href="'+url+'"><button class="mat-menu-item" tabindex="0" aria-disabled="false"> '+__menu[0]+' </button></a>'
		}
	}
	#
	content = replaceString(content,"{{title}}",akoDocData[:title])
	content = replaceString(content,"{{assets-folder}}",getRelativeLink(akoDocData[:htmlpath])+"assets")
	content = replaceString(content,"{{links-to-current-file}}",__linkToFile)
	content = replaceString(content,"{{secondary-menu}}",__secondaryMenu)
	content = replaceString(content,"{{current-file-id-link}}",akoDocData[:title])
	content = replaceString(content,"{{block-in-current-file-ids}}",__sideBarNavigations)
	content = replaceString(content,"{{main-contents}}",__mainContent)
	content = replaceString(content,"{{author}}",akoDocData[:author])
	content = replaceString(content,"{{date}}",akoDocData[:date])
	content = replaceString(content,"{{time}}",akoDocData[:time])
	content = replaceString(content,"{{license}}",akoDocData[:license])
	
	htmlFile = new File(akoDestDir+akoDocData[:htmlpath])
	htmlFile.write(content)
	
block copyAssetFolder()
	dir = new Directory("./templates/"+templateName+"/assets/")
	if dir.exists() {
		#dir.copyTo(akoDestDir) #to copy to main dest dir
	else
		throw("the selected template "+templateName+" does not exists")
	}