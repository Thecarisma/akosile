
block akoParseSimple(sourceFile,type,currentDir)
	pureName = removeString(sourceFile.name(),type)
	fsl = removeString(sourceFile.absolutePath(),currentDir)
	fileSourceLink =  removeString(fsl,type)+".html" #allAkoDocLinks["currentDir"]+
	allAkoDocLinks[pureName] = fileSourceLink
	currentSourceData = []
	
	currentSourceData["modules"] = []
	currentSourceData["blocks"] = []
	currentSourceData["classes"] = []
	currentSourceData["htmlpath"] = replaceString(fileSourceLink,'\','/')
	currentSourceData["title"] = sourceFile.name()
	currentSourceData["htmlname"] = pureName+".html"
	
	tempModule = [] 
	tempModule["classes"] = []
	tempClass = []
	tempClass["blocks"] = []
	tempBlock = []
	
	hasModule = false
	hasClass = false
	currentModuleValue = null
	currentClassName = null
	currentComment = ""

	source = sourceFile.readFileAsString()	+ " "
	TOKEN_UNUSED =  0 TOKEN_MULTILINE_COMMENT = 1 
	TOKEN_TYPE = TOKEN_UNUSED
	sourceLen = lengthOf(source)
	for i = 0 to sourceLen {
		if i == sourceLen {  break }
		switch TOKEN_TYPE {
			case TOKEN_UNUSED 
				if source[i] == '/' and source[i+1] == '*' i++ TOKEN_TYPE = TOKEN_MULTILINE_COMMENT
				else
					if (sourceLen - i) > 5 {
						if (source[i]+source[i+1]+source[i+2]+source[i+3]+source[i+4]+source[i+5]) == "module" {
							moduleName = ""
							i++ i++ i++ i++ i++ i++
							while isWhiteSpace(source[i]) { i++ }
							while isAlphaNum(source[i]) or source[i] == "." {
								moduleName += source[i] i++
							} 
							tempModule["comment"] = currentComment currentComment = ""
							currentModuleValue = moduleName
							currentSourceData["modules"][currentModuleValue] = tempModule
							if !hasModule { hasModule = true }
						} 
					}
					if (sourceLen - i) > 4 {
						if (source[i]+source[i+1]+source[i+2]+source[i+3]+source[i+4]) == "class" {
							className = ""
							i++ i++ i++ i++ i++ 
							while isWhiteSpace(source[i]) { i++ }
							while isAlphaNum(source[i]) or source[i] == "." {
								className += source[i] 
								i++
							} 
							tempClass["comment"] = currentComment currentComment = ""
							currentClassName = className
							if hasModule {
								currentSourceData["modules"][currentModuleValue]["classes"][currentClassName] = tempClass
							else
								currentSourceData["classes"][currentClassName] = tempClass
							}
							if !hasClass { hasClass = true }
						elif (source[i]+source[i+1]+source[i+2]+source[i+3]+source[i+4]) == "block" 
							blockName = ""
							i++ i++ i++ i++ i++ 
							while isWhiteSpace(source[i]) { i++ }
							while isAlphaNum(source[i]) or source[i] == "." {
								blockName += source[i] i++
							} 
							tempBlock["comment"] = currentComment currentComment = ""
							if hasModule {
								currentSourceData["modules"][currentModuleValue]["classes"][currentClassName]["blocks"][blockName] = tempBlock 
							elif hasClass
								currentSourceData["classes"][currentClassName]["blocks"][blockName] = tempBlock 
							else
								currentSourceData["blocks"][blockName] = tempBlock
							}
							tempBlock = []
						}
					}
				end
			case TOKEN_MULTILINE_COMMENT
				if source[i] == '*' and source[i+1] == '/' and (source[i+2] != '"' or source[i+2] != "'") {
					TOKEN_TYPE = TOKEN_UNUSED
				else
					currentComment += source[i]
				}
		}
	} 
	add(tempModule["classes"],tempClass) 
	add(currentSourceData["modules"],tempModule) 
	allAkoDocData + currentSourceData


