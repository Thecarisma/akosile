
call "simple/io/File.sim"
call "simple/core/List.sim"

position = 0
source = ""

block sourcePosition()
	if position > lengthOf(source) {
		return lengthOf(source)
	else
		return position
	}

block parseAkoFile(file)
	printAkoMessage("preparing to parse map.ako file",1)
	source = file.readFileAsString()
	if startAkoParsing(source) {
		return true
	else
		return false
	}
	return false
	
block startAkoParsing(source)
	SCANNER_IDENTIFIER = 0 SCANNER_LITERAL = 1
	SCANNER_TYPE = SCANNER_IDENTIFIER
	sourceLen = lengthOf(source)
	for a = 0 to sourceLen {
		val = source[a]
		switch SCANNER_TYPE {
			case SCANNER_IDENTIFIER
				if val == "[" {
					valVar = ""
					while source[a+1] != "]" {
						a++
						valVar += source[a]
					}
					@valVar
				}
		}
	}
	return true
	
class AkoToken
	
	type location value variable location
	
	block AkoToken(variable,value,location,type)
		this.type = type
		this.variable = variable
		this.value =  value
		this.location = location
	
	